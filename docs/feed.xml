<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://davidbstein.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://davidbstein.com/" rel="alternate" type="text/html" /><updated>2019-07-03T20:18:49+00:00</updated><id>https://davidbstein.com/feed.xml</id><title type="html">stein</title><subtitle>stein's web site</subtitle><entry><title type="html">Airplane Challenge: Crossword Puzzle Editor</title><link href="https://davidbstein.com/engineering/2019/03/28/airplane-challenge-crossword-drawer.htm" rel="alternate" type="text/html" title="Airplane Challenge: Crossword Puzzle Editor" /><published>2019-03-28T00:00:00+00:00</published><updated>2019-03-28T00:00:00+00:00</updated><id>https://davidbstein.com/engineering/2019/03/28/airplane-challenge-crossword-drawer</id><content type="html" xml:base="https://davidbstein.com/engineering/2019/03/28/airplane-challenge-crossword-drawer.htm">&lt;p&gt;
  I've recently gotten excited about crosswords. I picked up my &quot;code something up
  on a single flight&quot; game from a while back and made a crossword editor.
  &lt;!--more--&gt;
  It does stuff like
  apply the symmetry rules automatically, which is fun I guess. If I wind
  up using it I'll finish the sharing feature, which I think is the one thing that
  makes this less useful than it could be.
&lt;/p&gt;
&lt;p&gt;
  Be careful when resizing, it completely wipes the board.
&lt;/p&gt;

&lt;link href=&quot;/assets/src/2019/crosswords/main.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/assets/src/2019/crosswords/main.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/assets/src/2019/crosswords/words.js&quot;&gt;&lt;/script&gt;
&lt;div id=&quot;puzzle-board-area&quot;&gt;
  &lt;div id=&quot;puzzle-board&quot;&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;controls&quot;&gt;
  &lt;div id=&quot;size-select-area&quot;&gt;
    &lt;span&gt; Size: &lt;/span&gt;
    &lt;span id=&quot;display-size&quot;&gt;3&lt;/span&gt;
    &lt;button class=&quot;symbutton&quot; onclick=&quot;size_down()&quot;&gt; - &lt;/button&gt;
    &lt;button class=&quot;symbutton&quot; onclick=&quot;size_up()&quot;&gt; + &lt;/button&gt;
  &lt;/div&gt;
  &lt;div id=&quot;set-name-area&quot;&gt;
    &lt;span&gt; Name: &lt;/span&gt;
    &lt;input type=&quot;text&quot; placeholder=&quot;my puzzle&quot; id=&quot;puzzle-name&quot;/&gt;
  &lt;/div&gt;
  &lt;div id=&quot;save-button-area&quot;&gt;
    &lt;button onclick=&quot;save_state();&quot;&gt; SAVE &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;puzzle-list-area&quot;&gt;
  &lt;div class=&quot;section-header&quot;&gt;
  saved puzzles:
  &lt;/div&gt;
  &lt;div id=&quot;puzzle-list-links&quot;&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;script&gt; initialize(); &lt;/script&gt;</content><author><name>David Stein</name></author><category term="airplane challenge" /><category term="coding" /><category term="demo" /><summary type="html">I've recently gotten excited about crosswords. I picked up my &quot;code something up on a single flight&quot; game from a while back and made a crossword editor.</summary></entry><entry><title type="html">Comparing Effective Salaries in Different Regions</title><link href="https://davidbstein.com/engineering/2016/04/30/comparing-salaries.html" rel="alternate" type="text/html" title="Comparing Effective Salaries in Different Regions" /><published>2016-04-30T00:00:00+00:00</published><updated>2016-04-30T00:00:00+00:00</updated><id>https://davidbstein.com/engineering/2016/04/30/comparing-salaries</id><content type="html" xml:base="https://davidbstein.com/engineering/2016/04/30/comparing-salaries.html">&lt;p&gt;While job hunting, I wanted a way to compare offers that could take different cost of living and tax rates into account.
Hacked this thing up.
&lt;!--more--&gt;
It has hardcoded 2015 tax brackets pulled from &lt;a href=&quot;http://www.tax-brackets.org&quot;&gt;tax-brackets.org&lt;/a&gt; - it is not super accurate but should give a kind of rough idea of how salaries actually compare.&lt;/p&gt;

&lt;p&gt;I assume the user is single and has no dependants or other investments. Things are a little messier when those assumptions go away.&lt;/p&gt;

&lt;p&gt;This will save your session locally, but does not send any data to a server (in fact, davidbstein.com is a static stite)&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; charset=&quot;utf-8&quot; src=&quot;/static/external/jquery.js&quot;&gt;&lt;/script&gt;

&lt;script&gt;

  window.onload = (function(){
    $(&quot;#the-chart&quot;).html(&quot;&quot;);

    var FEDERAL_BRACKETS = [
      [0, .1],
      [9225, .15],
      [37450, .25],
      [90750, .28],
      [189300, .33],
      [411500, .35],
      [413200, .396]
    ];
    // see tax_chart.json
    var STATE_BRACKETS = {
    &quot;Alabama&quot;:[[0,0.02],[500,0.04],[3000,0.06]],
    &quot;Alaska&quot;:[[0,0]],
    &quot;Arizona&quot;:[[0,0.0259],[10000,0.0288],[25000,0.0336],[50000,0.0424],[150000,0.0454]],
    &quot;Arkansas&quot;:[[0,0.01],[3900,0.025],[7800,0.035],[11700,0.045],[19600,0.06],[32600,0.07]],
    &quot;California&quot;:[[0,0.01],[7124,0.02],[16890,0.04],[26657,0.06],[37005,0.08],[46766,0.093],[1000000,0.103]],
    &quot;Colorado&quot;:[[0,0.0463]],
    &quot;Connecticut&quot;:[[0,0.03],[10000,0.05],[500000,0.065]],
    &quot;Delaware&quot;:[[2000,0.022],[5000,0.039],[10000,0.048],[20000,0.052],[25000,0.0555],[60000,0.0695]],
    &quot;District Of Columbia&quot;:[[0,0.04],[10000,0.06],[40000,0.06]],
    &quot;Florida&quot;:[[0,0]],
    &quot;Georgia&quot;:[[0,0.01],[750,0.02],[2250,0.03],[3750,0.04],[5250,0.05],[7000,0.06]],
    &quot;Hawaii&quot;:[[0,0.014],[2400,0.032],[4800,0.055],[9600,0.064],[14400,0.068],[19200,0.072],[24000,0.076],[36000,0.079],[48000,0.0825],[150000,0.09],[175000,0.1],[300000,0.11]],
    &quot;Idaho&quot;:[[0,0.016],[1323,0.036],[2642,0.042],[3963,0.051],[5284,0.062],[6604,0.071],[9907,0.074],[26418,0.078]],
    &quot;Illinois&quot;:[[0,0.05]],
    &quot;Indiana&quot;:[[0,0.034]],
    &quot;Iowa&quot;:[[0,0.003],[1439,0.0058],[2878,0.0243],[5756,0.045],[12951,0.0612],[21585,0.0648],[28780,0.068],[43170,0.0792],[64755,0.0898]],
    &quot;Kansas&quot;:[[0,0.035],[15000,0.0625],[30000,0.0645]],
    &quot;Kentucky&quot;:[[0,0.02],[3000,0.03],[4000,0.04],[5000,0.05],[8000,0.058],[75000,0.06]],
    &quot;Louisiana&quot;:[[0,0.02],[12500,0.04],[50000,0.06]],
    &quot;Maine&quot;:[[0,0.02],[5000,0.045],[9950,0.07],[19950,0.085]],
    &quot;Maryland&quot;:[[0,0.02],[1000,0.03],[2000,0.04],[3000,0.0475],[150000,0.05],[300000,0.0525],[500000,0.055]],
    &quot;Massachusetts&quot;:[[0,0.053]],
    &quot;Michigan&quot;:[[0,0.0435]],
    &quot;Minnesota&quot;:[[0,0.0535],[23100,0.0705],[75891,0.0795]],
    &quot;Mississippi&quot;:[[0,0.03],[5000,0.04],[10000,0.05]],
    &quot;Missouri&quot;:[[0,0.015],[1000,0.02],[2000,0.025],[3000,0.03],[4000,0.035],[5000,0.04],[6000,0.045],[7000,0.05],[8000,0.055],[9000,0.06]],
    &quot;Montana&quot;:[[0,0.01],[2600,0.02],[4600,0.03],[6900,0.04],[9400,0.05],[12100,0.06],[15600,0.069]],
    &quot;Nebraska&quot;:[[0,0.0256],[2400,0.0357],[17500,0.0512],[27000,0.0684]],
    &quot;Nevada&quot;:[[0,0]],
    &quot;New Hampshire&quot;:[[0,0.05]],
    &quot;New Jersey&quot;:[[0,0.014],[20000,0.0175],[35000,0.035],[0,0.0553],[75000,0.0637],[500000,0.0897]],
    &quot;New Mexico&quot;:[[0,0.017],[5500,0.032],[11000,0.047],[16000,0.049]],
    &quot;New York&quot;:[[0,0.04],[8000,0.045],[11000,0.0525],[13000,0.059],[20000,0.0685],[200000,0.0785],[500000,0.0897]],
    &quot;North Carolina&quot;:[[0,0.06],[12750,0.07],[60000,0.0775]],
    &quot;North Dakota&quot;:[[0,0.0184],[34000,0.0344],[82400,0.0381],[171850,0.0442],[373650,0.0486]],
    &quot;Ohio&quot;:[[0,0.0059],[0,0.0117],[0,0.0235],[0,0.0294],[0,0.0352],[0,0.0411],[0,0.047],[0,0.0545],[0,0.0592]],
    &quot;Oklahoma&quot;:[[0,0.004],[1000,0.01],[2500,0.02],[3750,0.03],[4900,0.04],[7200,0.05],[8700,0.055]],
    &quot;Oregon&quot;:[[0,0.05],[3100,0.07],[7750,0.09],[125000,0.108],[250000,0.11]],
    &quot;Pennsylvania&quot;:[[0,0.03]],
    &quot;Rhode Island&quot;:[[0,0.0375],[55000,0.0475],[125000,0.0599]],
    &quot;South Carolina&quot;:[[0,0],[2760,0.03],[5520,0.04],[8280,0.05],[11040,0.06],[13800,0.07]],
    &quot;South Dakota&quot;:[[0,0]],
    &quot;Tennessee&quot;:[[0,0.06]],
    &quot;Texas&quot;:[[0,0]],
    &quot;Utah&quot;:[[0,0.05]],
    &quot;Vermont&quot;:[[0,0.0355],[34500,0.068],[83600,0.078],[174400,0.088],[379150,0.0895]],
    &quot;Virginia&quot;:[[0,0.02],[3000,0.03],[5000,0.05],[17000,0.0575]],
    &quot;Washington&quot;:[[0,0]],
    &quot;West Virginia&quot;:[[10000,0.04],[0,0.03],[25000,0.045],[40000,0.06],[60000,0.065]],
    &quot;Wisconsin&quot;:[[0,0.046],[10180,0.0615],[20360,0.065],[152740,0.0675],[224210,0.0775]],
    &quot;Wyoming&quot;:[[0,0]],
    &quot;none&quot;:[[0, 0]]
      };
    var CITY_BRACKETS = {
      &quot;NYC&quot;: [
        [0, .02907],
        [21600, .03534],
        [45000, .03591],
        [90000, .03648],
        [500000, .03876]
      ]
    };
    var CITY_STATES = {
      NYC: &quot;New York&quot;
    }

    var STORE_KEY_ENTRIES = &quot;salaray-entries&quot;
    var STORE_KEY_CONFIG = &quot;salaray-config&quot;

    var SalaryChart = {}

    var entries, config;
    try {
      entries = JSON.parse(window.localStorage.getItem(STORE_KEY_ENTRIES)) || [];
    } catch(e) {
      entries = [];
    }

    try {
      config = JSON.parse(window.localStorage.getItem(STORE_KEY_CONFIG)) || {max_401k: false};
      $(&quot;input[name=max_401k]&quot;)[0].checked = config.max_401k;
    } catch(e) {
      config = {
        max_401k: $(&quot;input[name=max_401k]&quot;)[0].checked
      }
    }

    function save_state(){
      localStorage.setItem(STORE_KEY_ENTRIES, JSON.stringify(entries))
      localStorage.setItem(STORE_KEY_CONFIG, JSON.stringify(config))
    }

    function read_new_entry(args){
      var entry = {};
      var process_fns = [
        [&quot;label&quot;, function(v){return v || &quot;(no name set)&quot;;}],
        [&quot;salary&quot;, function(v){return parseFloat(v) || 0;}],
        [&quot;bonus&quot;, function(v){return parseFloat(v) || 0;}],
        [&quot;rent&quot;, function(v){return parseFloat(v) || 0;}],
        [&quot;costs&quot;, function(v){return parseFloat(v) || 0;}],
        [&quot;savings&quot;, function(v){return parseFloat(v) || 0;}],
        [&quot;match_401k&quot;, function(v){return parseFloat(v) || 0;}],
        [&quot;perks&quot;, function(v){return parseFloat(v) || 0;}],
        [&quot;location&quot;, function(v){return v || &quot;none&quot;;}]
      ];
      $(&quot;.new-entry input&quot;).each(function(i, field){
        entry[field.name] = field.value;
      });
      $(&quot;.new-entry select&quot;).each(function(i, field){
        entry[field.name] = field.value;
      });
      process_fns.map(function(e){
        var k = e[0]; var fn = e[1];
        entry[k] = fn(entry[k]);
      })
      return entry
    }

    function compute_tax(entry, brackets){
      var income = entry.salary - (config.max_401k ? 18000 : 0);
      var tax = 0;
      brackets.map(function(b, idx){
        var next = brackets[idx+1];
        return [b[0], next ? next[0] : Math.max(income, b[0]), b[1]];
      }).forEach(function(bracket){
        var min = Math.min(bracket[0], income);
        var max = Math.min(bracket[1], income);
        tax += (max - min) * bracket[2];
      });
      return tax;
    }

    function compute_breakdown(entry){
      var state = entry.location;
      var amounts = {};
      amounts.city_tax = 0
      if (!STATE_BRACKETS[state]) {
        state = CITY_STATES[entry.location];
        amounts.city_tax = compute_tax(entry, CITY_BRACKETS[entry.location]);
      }
      amounts.state_tax = compute_tax(entry, STATE_BRACKETS[state]);
      amounts.federal_tax = compute_tax(entry, FEDERAL_BRACKETS);
      amounts.rent = entry.rent * 12;
      amounts.retirement = config.max_401k ? entry.match_401k + 18000 : 0;
      amounts.perks = entry.perks;
      amounts.costs = entry.costs * 12;
      amounts.bonus = entry.bonus;
      amounts.surplus = ( entry.salary
        - amounts.costs
        - amounts.city_tax
        - amounts.state_tax
        - amounts.federal_tax
        - amounts.rent
        - amounts.retirement
      );
      return amounts
    }

    function format_amount(amount, label){
      var labelstr = label ? label + &quot; - &quot; : &quot;&quot;;
      var formatted = labelstr + &quot;$&quot; + amount.toLocaleString()
      return $(&quot;&lt;span&gt;&quot;).text(formatted);
    }

    var _leftfields = ['city_tax', 'state_tax', 'federal_tax', 'rent', 'costs'];
    var _rightfields = ['retirement', 'surplus', 'bonus', 'perks'];

    function draw_entry_bar(breakdown, scale){
      if (breakdown.surplus &lt; 0 || scale &lt;= 0){
        return {
          bar: $(&quot;&lt;div&gt;&quot;, {&quot;class&quot;: &quot;unlivable-bar&quot;}).text(&quot;unlivable&quot;),
          leftscale: 100,
          rightscale: 100
        }
      }


      var leftscale = _leftfields.reduce(function(prevVal, cur){
        return prevVal + (breakdown[cur] / scale)
      }, 0)
      var lefttotal = _leftfields.reduce(function(prevVal, cur){
        return prevVal + breakdown[cur]
      }, 0)
      var leftbar = $(&quot;&lt;div class='leftbar'&gt;&quot;)
        .attr(&quot;style&quot;, &quot;width:&quot; + (100 * leftscale) + &quot;%&quot;)
        .append(format_amount(lefttotal).attr({&quot;class&quot;: &quot;biglabel&quot;}));
      _leftfields.forEach(function(field){
        leftbar.append(
          $(&quot;&lt;div&gt;&quot;, {&quot;class&quot;: field, &quot;style&quot;:&quot;width:&quot; + (100 * breakdown[field] / (scale * leftscale) ) + &quot;%&quot;})
          .append(format_amount(breakdown[field], field))
        );
      })


      var rightscale = _rightfields.reduce(function(prevVal, cur){
        return prevVal + (breakdown[cur] / scale)
      }, 0)
      var righttotal = _rightfields.reduce(function(prevVal, cur){
        return prevVal + breakdown[cur]
      }, 0)
      var rightbar = $(&quot;&lt;div class='rightbar'&gt;&quot;)
        .attr(&quot;style&quot;, &quot;width:&quot; + (100 * rightscale) + &quot;%&quot;)
        .append(format_amount(righttotal).attr({&quot;class&quot;: &quot;biglabel&quot;}));
      _rightfields.forEach(function(field){
        rightbar.append(
          $(&quot;&lt;div&gt;&quot;, {&quot;class&quot;: field, &quot;style&quot;:&quot;width:&quot; + (100 * breakdown[field] / (scale * rightscale) ) + &quot;%&quot;})
          .append(format_amount(breakdown[field], field))
        );
      })
      return {
        bar: $(&quot;&lt;div&gt;&quot;, {&quot;class&quot;: &quot;bar&quot;}).append(leftbar).append(rightbar),
        leftscale: leftscale,
        rightscale: rightscale
      }
    }

    function redraw(){
      var new_chart = $(&quot;&lt;div id='the-chart' class='chart'&gt;&quot;);
      var scale = 1.3 * entries.reduce(
        function(prev, cur){
          return Math.max(prev, cur.salary + cur.bonus)
        },
        0
      );
      var bars = entries.map(function(e){
        var to_ret = draw_entry_bar(compute_breakdown(e), scale);
        to_ret.entry = e;
        return to_ret;
      });
      var max_left_scale = bars.reduce(function(prevVal, cur){return Math.max(prevVal, cur.leftscale);}, 0.5);
      bars.forEach(function(b, idx){
        new_chart.append($(&quot;&lt;div&gt;&quot;).text(b.entry.label));
        new_chart.append($(&quot;&lt;button onclick='SalaryChart.remove_entry(&quot;+idx+&quot;)'&gt;&quot;).text(&quot;remove&quot;));
        new_chart.append($(&quot;&lt;div&gt;&quot;));
        buffersize = 100 * (max_left_scale - b.leftscale);
        new_chart.append(b.bar.prepend($(&quot;&lt;div&gt;&quot;, {class: &quot;leftbuff&quot;, style: &quot;width:&quot; + buffersize + &quot;%&quot;})));
      })
      $(&quot;#the-chart&quot;).html(new_chart.html());
    }

    SalaryChart.clear_entry_input = function(){
      $(&quot;.new-entry input&quot;).each(function(i, field){
        $(field).val(&quot;&quot;);
      })
      $(&quot;.new-entry select&quot;).val(&quot;&quot;);
    }

    SalaryChart.update = function(){
      config.max_401k = $(&quot;input[name=max_401k]&quot;)[0].checked;
      save_state();
      redraw();
    }

    SalaryChart.add_entry = function(){
      var entry = read_new_entry();
      entries.push(entry);
      save_state();
      redraw();
    }

    SalaryChart.remove_entry = function(idx){
      entries = entries.slice(0,idx).concat(entries.slice(idx+1));
      save_state();
      redraw();
    }

    window.SalaryChart = SalaryChart;
    redraw();


    function draw_key(){
      var key = $(&quot;&lt;div id='the-key'&gt;&quot;);
      function drawfunc(fieldname){
        return $(&quot;&lt;div&gt;&quot;)
          .append($(&quot;&lt;span&gt;&quot;, {class: fieldname + &quot; labeldiv&quot;}))
          .append(&quot;&lt;span&gt;&quot; + fieldname + &quot;&lt;/div&gt;&quot;)
      }
      var leftdiv = $(&quot;&lt;div&gt;&quot;)
      _leftfields.map(drawfunc).forEach(function(item){leftdiv.append(item)});
      key.append(leftdiv)
      var rightdiv = $(&quot;&lt;div&gt;&quot;)
      _rightfields.map(drawfunc).forEach(function(item){rightdiv.append(item)});
      key.append(rightdiv)
      $(&quot;#the-key&quot;).html(key.html());
    }
    draw_key();
  })
&lt;/script&gt;

&lt;style&gt;
  div#the-key {
    border: 1px solid #ccc;
    margin: 8px;
  }
  .labeldiv {
    width: 16px;
    height: 16px;
    display: inline-block;
  }
  #the-key div {
    display: inline-block;
    margin: 2px 8px;
  }
  #the-key span {
    margin: 0px 4px;
  }
  div#the-chart {
    margin: 8px;
    border: 1px solid #ccc;
    padding: 8px;
  }
  span.biglabel {
    color: transparent;
    position: absolute;
    margin-top: -28px;
    cursor: default;
  }
  .bar:hover span.biglabel {
    color: black
  }
  .entry-header {
    margin-top: 16px;
  }
  .bar div div {
    cursor: default;
    display: inline-block;
    color: transparent;
    margin: 0;
    white-space: nowrap;
  }
  .bar div div:hover span {
    color: black;
    overflow: visible;
    display: inline-block;
    position: relative;
    top: 22px;
  }

  .bar .leftbar, .bar .rightbar {
    display: inline;
    margin-bottom: 25px;
    padding-top: 8px;
  }

  .leftbar {
    background: #fbb;
  }

  .rightbar {
    background: #bef;
  }

  .city_tax {
    background: red;
  }

  .leftbuff {
    height: 1px;
  }

  .state_tax {
    background: #FF8D00;
  }

  .federal_tax {
    background: #FFD400;
  }

  .rent {
    background: #FB06FB;
  }

  .costs {
    background: maroon;
  }

  .retirement {
    background: blue;
  }

  .surplus {
    background: #00D860;
  }

  .bonus {
    background: #15FFFF;
  }

  .perks {
    background: #3FBDEC;
  }

  .unlivable-bar {
    background: #ccc;
    text-align: center;
    width: 400px;
    margin: auto;
  }

  .bar {
    padding-top:25px;
    height: 50px;
    display: flex;
  }
&lt;/style&gt;

&lt;div id=&quot;content-wrapper&quot;&gt;
  &lt;div id=&quot;content-wrapper-bg&quot;&gt;&lt;/div&gt;
  &lt;div id=&quot;content-wrapper-fg&quot; class=&quot;text-document&quot;&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;div&gt;
          &lt;h2&gt;
            &lt;span&gt;Add new offer&lt;/span&gt;
          &lt;/h2&gt;
          &lt;div class=&quot;new-entry&quot;&gt;
            &lt;div class=&quot;entry-header&quot;&gt; Basics &lt;/div&gt;
            &lt;input placeholder=&quot;Job Name&quot; name=&quot;label&quot; /&gt;
            &lt;input placeholder=&quot;Annual Salary&quot; name=&quot;salary&quot; type=&quot;number&quot; /&gt;
            &lt;input placeholder=&quot;Bonus&quot; name=&quot;bonus&quot; type=&quot;number&quot; /&gt;
            &lt;select placeholder=&quot;Location&quot; name=&quot;location&quot;&gt;
              &lt;option value=&quot;&quot;&gt;--- Location&lt;/option&gt;
              &lt;option value=&quot;NYC&quot;&gt;New York City&lt;/option&gt;
              &lt;option value=&quot;Alabama&quot;&gt; Alabama &lt;/option&gt;
              &lt;option value=&quot;Alaska&quot;&gt; Alaska &lt;/option&gt;
              &lt;option value=&quot;Arizona&quot;&gt; Arizona &lt;/option&gt;
              &lt;option value=&quot;Arkansas&quot;&gt; Arkansas &lt;/option&gt;
              &lt;option value=&quot;California&quot;&gt; California &lt;/option&gt;
              &lt;option value=&quot;Colorado&quot;&gt; Colorado &lt;/option&gt;
              &lt;option value=&quot;Connecticut&quot;&gt; Connecticut &lt;/option&gt;
              &lt;option value=&quot;Delaware&quot;&gt; Delaware &lt;/option&gt;
              &lt;option value=&quot;District Of Columbia&quot;&gt; District Of Columbia &lt;/option&gt;
              &lt;option value=&quot;Florida&quot;&gt; Florida &lt;/option&gt;
              &lt;option value=&quot;Georgia&quot;&gt; Georgia &lt;/option&gt;
              &lt;option value=&quot;Hawaii&quot;&gt; Hawaii &lt;/option&gt;
              &lt;option value=&quot;Idaho&quot;&gt; Idaho &lt;/option&gt;
              &lt;option value=&quot;Illinois&quot;&gt; Illinois &lt;/option&gt;
              &lt;option value=&quot;Indiana&quot;&gt; Indiana &lt;/option&gt;
              &lt;option value=&quot;Iowa&quot;&gt; Iowa &lt;/option&gt;
              &lt;option value=&quot;Kansas&quot;&gt; Kansas &lt;/option&gt;
              &lt;option value=&quot;Kentucky&quot;&gt; Kentucky &lt;/option&gt;
              &lt;option value=&quot;Louisiana&quot;&gt; Louisiana &lt;/option&gt;
              &lt;option value=&quot;Maine&quot;&gt; Maine &lt;/option&gt;
              &lt;option value=&quot;Maryland&quot;&gt; Maryland &lt;/option&gt;
              &lt;option value=&quot;Massachusetts&quot;&gt; Massachusetts &lt;/option&gt;
              &lt;option value=&quot;Michigan&quot;&gt; Michigan &lt;/option&gt;
              &lt;option value=&quot;Minnesota&quot;&gt; Minnesota &lt;/option&gt;
              &lt;option value=&quot;Mississippi&quot;&gt; Mississippi &lt;/option&gt;
              &lt;option value=&quot;Missouri&quot;&gt; Missouri &lt;/option&gt;
              &lt;option value=&quot;Montana&quot;&gt; Montana &lt;/option&gt;
              &lt;option value=&quot;Nebraska&quot;&gt; Nebraska &lt;/option&gt;
              &lt;option value=&quot;Nevada&quot;&gt; Nevada &lt;/option&gt;
              &lt;option value=&quot;New Hampshire&quot;&gt; New Hampshire &lt;/option&gt;
              &lt;option value=&quot;New Jersey&quot;&gt; New Jersey &lt;/option&gt;
              &lt;option value=&quot;New Mexico&quot;&gt; New Mexico &lt;/option&gt;
              &lt;option value=&quot;New York&quot;&gt; New York &lt;/option&gt;
              &lt;option value=&quot;North Carolina&quot;&gt; North Carolina &lt;/option&gt;
              &lt;option value=&quot;North Dakota&quot;&gt; North Dakota &lt;/option&gt;
              &lt;option value=&quot;Ohio&quot;&gt; Ohio &lt;/option&gt;
              &lt;option value=&quot;Oklahoma&quot;&gt; Oklahoma &lt;/option&gt;
              &lt;option value=&quot;Oregon&quot;&gt; Oregon &lt;/option&gt;
              &lt;option value=&quot;Pennsylvania&quot;&gt; Pennsylvania &lt;/option&gt;
              &lt;option value=&quot;Rhode Island&quot;&gt; Rhode Island &lt;/option&gt;
              &lt;option value=&quot;South Carolina&quot;&gt; South Carolina &lt;/option&gt;
              &lt;option value=&quot;South Dakota&quot;&gt; South Dakota &lt;/option&gt;
              &lt;option value=&quot;Tennessee&quot;&gt; Tennessee &lt;/option&gt;
              &lt;option value=&quot;Texas&quot;&gt; Texas &lt;/option&gt;
              &lt;option value=&quot;Utah&quot;&gt; Utah &lt;/option&gt;
              &lt;option value=&quot;Vermont&quot;&gt; Vermont &lt;/option&gt;
              &lt;option value=&quot;Virginia&quot;&gt; Virginia &lt;/option&gt;
              &lt;option value=&quot;Washington&quot;&gt; Washington &lt;/option&gt;
              &lt;option value=&quot;West Virginia&quot;&gt; West Virginia &lt;/option&gt;
              &lt;option value=&quot;Wisconsin&quot;&gt; Wisconsin &lt;/option&gt;
              &lt;option value=&quot;Wyoming&quot;&gt; Wyoming &lt;/option&gt;
            &lt;/select&gt;
            &lt;div class=&quot;entry-header&quot;&gt; Monthly Costs (optional) &lt;/div&gt;
            &lt;input placeholder=&quot;Monthly Rent&quot; name=&quot;rent&quot; type=&quot;number&quot; /&gt;
            &lt;input placeholder=&quot;Monthly Costs&quot; name=&quot;costs&quot; type=&quot;number&quot; /&gt;
            &lt;div class=&quot;entry-header&quot;&gt; Perks (optional) &lt;/div&gt;
            &lt;input placeholder=&quot;401k matching&quot; name=&quot;match_401k&quot; type=&quot;number&quot; /&gt;
            &lt;input placeholder=&quot;value of other perks&quot; name=&quot;perks&quot; type=&quot;number&quot; /&gt;
            &lt;div style=&quot;margin-top:32px&quot;&gt;
              &lt;button onclick=&quot;SalaryChart.add_entry()&quot;&gt; Add new entry &lt;/button&gt;
              &lt;button onclick=&quot;SalaryChart.clear_entry_input()&quot;&gt; clear &lt;/button&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;h2&gt;
            &lt;span&gt;Comparison&lt;/span&gt;
          &lt;/h2&gt;
          &lt;div id=&quot;the-key&quot;&gt;key&lt;/div&gt;
          &lt;div class=&quot;chart&quot; id=&quot;the-chart&quot;&gt;
            (loading chart...)
          &lt;/div&gt;
          &lt;div&gt;&lt;label&gt;&lt;input name=&quot;max_401k&quot; type=&quot;checkbox&quot; onclick=&quot;SalaryChart.update()&quot; /&gt;I will max out my 401k&lt;/label&gt;&lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</content><author><name>David Stein</name></author><category term="coding" /><category term="demo" /><category term="finances" /><summary type="html">While job hunting, I wanted a way to compare offers that could take different cost of living and tax rates into account. Hacked this thing up.</summary></entry></feed>